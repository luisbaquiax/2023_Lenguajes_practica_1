/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Enum.java to edit this template
 */
package com.lenguajespracticalexico.analisiLexico.enums;

/**
 *
 * @author luis
 */
public enum TipoToken {
    OPERADOR_ARITMÉTICO("OPERADOR_ARITMÉTICO"),
    OPERADOR_ARITMÉTICO_MAS("+"),
    OPERADOR_ARITMÉTICO_MENOS("-"),
    OPERADOR_ARITMÉTICO_MULTI("*"),
    OPERADOR_ARITMÉTICO_DIV("/"),
    OPERADOR_ARITMÉTICO_DIV_2("//"),
    OPERADOR_ARITMÉTICO_EXPONENTE("**"),
    OPERADOR_ARITMÉTICO_MODULO("%"),
    OPERADOR_COMPARACION("OPERADOR_COMPARACION"),
    OPERADOR_COMPARACION_IGUAL("=="),
    OPERADOR_COMPARACION_DIFERENTE("!="),
    OPERADOR_COMPARACION_MAYOR_QUE(">"),
    OPERADOR_COMPARACION_MENOR_QUE("<"),
    OPERADOR_COMPARACION_MAYOR_IGUAL(">="),
    OPERADOR_COMPARACION_MENOR_IGUAL("<="),
    OPERADOR_LOGICO("OPERADOR_LOGICO"),
    OPERADOR_LOGICO_AND("and"),
    OPERADOR_LOGICO_OR("or"),
    OPERADOR_LOGICO_NOT("not"),
    OPERADOR_ASIGNACION("OPERADOR_ASIGNACION"),
    OPERADOR_ASIGNACION_IGUAL("="),
    OPERADOR_ASIGNACION_POR_IGUAL("*="),
    OPERADOR_ASIGNACION_DIV_IGUAL("/="),
    OPERADOR_ASIGNACION_EXPONENTE_IGUAL("**="),
    OPERADOR_ASIGNACION_DIV_2_IGUAL("//="),
    OPERADOR_ASIGNACION_MODULO_IGUAL("%="),
    OPERADOR_ASIGNACION_MAS_IGUAL("+="),
    OPERADOR_ASIGNACION_MENOS_IGUAL("-="),
    PALABRA_CLAVE("PALABRA_CLAVE"),
    CADENA("CADENA"),
    IDENTIFICADOR("IDENTIFICADOR"),
    ENTERO("ENTERO"),
    DECIMAL("DECIMAL"),
    BOOLEANAS("BOOLEANAS"),
    BOOLEANAS_FALSE("FALSE"),
    BOOLEANAS_TRUE("TRUE"),
    COMENTARIO("COMENTARIO"),
    SIGNOS("SIGNOS"),
    SIGNOS_PAREN_OPEN("("),
    SIGNOS_PAREN_CLOSE(")"),
    SIGNOS_CORCHETE_OPEN("["),
    SIGNOS_CORCHETE_CLOSE("]"),
    SIGNOS_LLAVE_OPEN("{"),
    SIGNOS_LLAVE_CLOSE("}"),
    SIGNOS_COMA(","),
    SIGNOS_PUNTO_COMA(";"),
    SIGNOS_DOS_PUNTOS(":"),
    TOKEN_ESPECIAL_ESPACIO(" "),
    OPERADOR_TERNARIO("?");

    public final String value;

    private TipoToken(String value){
        this.value = value;
    }
}
